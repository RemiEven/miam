openapi: 3.0.0
servers: []
info:
  title: Miam api
  version: 0.0.1
  description: >-
    Miam api is a restful api allowing a client to manage a set of recipes which contains ingredients.

tags: []
paths:
  '/recipe':
    post:
      tags:
        - 'Recipe'
      summary: 'Create a new recipe'
      description: 'Create a new recipe. Provided ingredients can either be pre-existing, in which case they must provide an ingredientId, or new, in which case they must provide a name. Quantity is always optional.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditableRecipe'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Error'
  '/recipe/{id}':
    get:
      tags:
        - 'Recipe'
      summary: 'Get a recipe by its id'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
    put:
      tags:
        - 'Recipe'
      summary: 'Update a recipe'
      description: 'Update a recipe. Provided ingredients can either be pre-existing, in which case they must provude an ingredientId, or new, in which case they must provide a name. Quantity is always optional.'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditableRecipe'
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - 'Recipe'
      summary: 'Delete a recipe'
      description: 'Delete a recipe, leaving potentially "orphaned" ingredient as-is.'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  '/recipe/search':
    post:
      tags:
        - 'Recipe'
      summary: 'Search for recipes'
      description: 'Search for recipes matching given search criteria, returning matches count and first few matches. Every criterion is optional; if none is provided, a random selection of recipes will be returned. `searchTerm` will be used to fuzzy-match in recipe/ingredient names. `excludedRecipes` and `excludedIngredients` are used to filter out recipes or ingredients based on their ids.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeSearch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeSearchResult'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Error'
  '/ingredient':
    get:
      tags:
        - 'Ingredient'
      summary: 'List all ingredients'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
  '/ingredient/{id}':
    delete:
      tags:
        - 'Ingredient'
      summary: 'Delete an ingredient if no recipe uses it'
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - 'Ingredient'
      summary: 'Update an ingredient'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditableIngredient'
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Recipe:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        howTo:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeIngredient'
    RecipeIngredient:
      type: object
      properties:
        ingredientId:
          type: string
        quantity:
          type: string
        name:
          type: string
    Ingredient:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    EditableIngredient:
      type: object
      properties:
        name:
          type: string
    RecipeSearch:
      type: object
      properties:
        searchTerm:
          type: string
        excludedRecipes:
          type: array
          items:
            type: string
        excludedIngredients:
          type: array
          items:
            type: string
    RecipeSearchResult:
      type: object
      properties:
        total:
          type: integer
        firstResults:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
    EditableRecipe:
      type: object
      properties:
        name:
          type: string
        howTo:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeIngredient'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
security: []
